'use client';

import { useTaskStore } from '../store/taskStore';

export default function DebugInfo() {
  const { tasks, loading, error } = useTaskStore();
  
  const todayTasks = tasks.filter(t => t.type === 'today');
  const reminders = tasks.filter(t => t.type === 'reminder');
  
  return (
    <div style={{ 
      marginTop: '20px', 
      padding: '10px', 
      background: '#f0f0f0', 
      borderRadius: '5px',
      fontSize: '12px'
    }}>
      <h4>–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (Zustand Store):</h4>
      <p>üîÑ –ó–∞–≥—Ä—É–∑–∫–∞: {loading ? '–î–∞' : '–ù–µ—Ç'}</p>
      <p>‚ùå –û—à–∏–±–∫–∞: {error || '–ù–µ—Ç'}</p>
      <p>üìä –í—Å–µ–≥–æ –∑–∞–¥–∞—á –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: {tasks.length}</p>
      <p>‚úÖ –ó–∞–¥–∞—á–∏ —Å–µ–≥–æ–¥–Ω—è: {todayTasks.length}</p>
      <p>‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {reminders.length}</p>
      <p>‚úîÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {tasks.filter(t => t.completed).length}</p>
      <p>‚è≥ –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {tasks.filter(t => !t.completed).length}</p>
      
      <div style={{ marginTop: '10px' }}>
        <strong>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–¥–∞—á–∏:</strong>
        {tasks.slice(-3).map(task => (
          <div key={task.id} style={{ 
            margin: '5px 0', 
            padding: '5px', 
            background: 'white',
            borderLeft: `4px solid ${task.type === 'today' ? '#4CAF50' : '#FF9800'}`
          }}>
            <div>{task.text}</div>
            <div style={{ fontSize: '10px', color: '#666' }}>
              {task.type} ‚Ä¢ {task.completed ? '‚úÖ' : '‚ùå'} ‚Ä¢ 
              {new Date(task.createdAt).toLocaleTimeString()}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}